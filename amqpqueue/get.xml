<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="amqpqueue.get" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>AMQPQueue::get</refname>
  <refpurpose>Retrieve the next message from the queue.</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>mixed</type><methodname>AMQPQueue::get</methodname>
      <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
     </methodsynopsis>
     <para>
       Retrieve the next available message from the queue. If no messages are present in the queue, this function will return &false; immediately. This is a non blocking alternative to the <methodname>AMQPQueue::consume</methodname> method.
     </para>
     <para>
      Currently, the only supported flag for the <parameter>flags</parameter> parameter is <constant>AMQP_AUTOACK</constant>. If this flag is passed in, then the message returned will automatically be marked as acknowledged by the broker as soon as the frames are sent to the client.
     </para>
    </refsect1>

    <refsect1 role="parameters">
     &reftitle.parameters;
     <para>
      <variablelist>
      <varlistentry>
       <term><parameter>flags</parameter></term>
       <listitem>
        <para>
         A bitmask of supported flags for the method call. Currently, the only the supported flag is <constant>AMQP_AUTOACK</constant>. If this value is not provided, it will use the value of <literal>amqp.auto_ack</literal>.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
     </para>
    </refsect1>

    <refsect1 role="returnvalues">
     &reftitle.returnvalues;
     <para>
      An instance of <classname>AMQPEnvelope</classname> representing the message pulled from the queue, or &false;.
     </para>
    </refsect1>

    <refsect1 role="examples">
     &reftitle.examples;
     <para>
      <example>
       <title><methodname>AMQPQueue::get</methodname> example</title>
       <programlisting role="php">
   <![CDATA[
   <?php

   /* Create a connection using all default credentials: */
   $connection = new AMQPConnection();
   $connection->connect();

   $channel = new AMQPChannel($connection);

   /* create a queue object */
   $queue = new AMQPQueue($channel);

   //declare the queue
   $queue->declareQueue('myqueue');

   //get the messages
   $messages = $queue->get(AMQP_AUTOACK);

   echo $message->getBody();

   ?>
   ]]>
       </programlisting>
      </example>
     </para>
    </refsect1>

   </refentry>

   <!-- Keep this comment at the end of the file
   Local variables:
   mode: sgml
   sgml-omittag:t
   sgml-shorttag:t
   sgml-minimize-attributes:nil
   sgml-always-quote-attributes:t
   sgml-indent-step:1
   sgml-indent-data:t
   indent-tabs-mode:nil
   sgml-parent-document:nil
   sgml-default-dtd-file:"~/.phpdoc/manual.ced"
   sgml-exposed-tags:nil
   sgml-local-catalogs:nil
   sgml-local-ecat-files:nil
   End:
   vim600: syn=xml fen fdm=syntax fdl=2 si
   vim: et tw=78 syn=sgml
   vi: ts=1 sw=1
   -->
