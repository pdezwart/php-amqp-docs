<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ --> 

<refentry xml:id="amqpqueue.nack" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>AMQPQueue::nack</refname>
  <refpurpose>Mark a message as explicitly not acknowledged.</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>AMQPQueue::nack</methodname>
   <methodparam><type>string</type><parameter>delivery_tag</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>flags</parameter><initializer><constant>AMQP_NOPARAM</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
    Mark the message identified by <parameter>delivery_tag</parameter> as explicitly not acknowledged. This method can only be called on messages that have not yet been acknowledged, meaning that messages retrieved with by <methodname>AMQPQueue::consume</methodname> and <methodname>AMQPQueue::get</methodname> and using the <constant>AMQP_AUTOACK</constant> flag are not eligible.
  </para>
  <para>
    When called, the broker will immediately drop the message identified by parameter <parameter>delivery_tag</parameter>, or send it back to the queue when called with <parameter>flag</parameter> <constant>AMQP_REQUEUE</constant>.
  </para>
  <para>
   When used with <parameter>flag</parameter> <constant>AMQP_MULTIPLE</constant>, this method will also reject all messages before the given <parameter>delivery_tag</parameter> that have not been acknowledged yet.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>delivery_tag</parameter></term>
    <listitem>
     <para>
      The delivery tag by which to identify the message.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>flags</parameter></term>
    <listitem>
     <para>
      A bitmask of any of the flags: <constant>AMQP_MULTIPLE</constant>,
      <contant>AMQP_REQUEUE</contant>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Throws <classname>AMQPChannelException</classname> if the channel is not open.
  </para>
  <para>
   Throws <classname>AMQPConnectionException</classname> if the connection to the broker was lost.
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
    &return.success;
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
