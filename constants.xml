<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<appendix xml:id="amqp.constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;
 &extension.constants;
 <para>
  <variablelist>
   <varlistentry xml:id="constant.amqp-noparam">
    <term>
     <constant>AMQP_NOPARAM</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      Passing in this constant as a flag will forcefully disable all other flags. Use this if you want to temporarily disable the <literal>amqp.auto_ack</literal> ini setting.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.amqp-durable">
    <term>
     <constant>AMQP_DURABLE</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      Durable exchanges and queues will survive a broker restart, complete with all of their data.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.amqp-passive">
    <term>
     <constant>AMQP_PASSIVE</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      Passive exchanges are queues will not be redeclared, but the broker will throw an error if the exchange or queue does not exist.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.amqp-exclusive">
    <term>
     <constant>AMQP_EXCLUSIVE</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      Valid for queues only, this flag indicates that only one client can be listening to and consuming from this queue.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.amqp-autodelete">
    <term>
     <constant>AMQP_AUTODELETE</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      For exchanges, the auto delete flag indicates that the exchange will be deleted as soon as no more queues are bound to it.
      If no queues were ever bound the exchange, the exchange will never be deleted.
     </simpara>
     <simpara>
      For queues, the auto delete flag indicates that the queue will be deleted as soon as there are no more listeners subscribed to it.
      If no subscription has ever been active, the queue will never be deleted.
     </simpara>
     <simpara>
      Note: Exclusive queues will always be automatically deleted with the client disconnects.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.amqp-internal">
    <term>
     <constant>AMQP_INTERNAL</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      Clients are not allowed to make specific queue bindings to exchanges defined with this flag.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.amqp-nolocal">
    <term>
     <constant>AMQP_NOLOCAL</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      When passed to the consume method for a clustered environment, do not consume from the local node.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.amqp-autoack">
    <term>
     <constant>AMQP_AUTOACK</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      When passed to the <methodname>AMQPQueue::get</methodname> and <methodname>AMQPQueue::get</methodname> methods as a flag, the messages will be immediately marked as acknowledged by the server upon delivery.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.amqp-ifempty">
    <term>
     <constant>AMQP_IFEMPTY</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      Passed on queue creation, this flag indicates that the queue should be deleted if it becomes empty.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.amqp-ifunused">
    <term>
     <constant>AMQP_IFUNUSED</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      Passed on queue or exchange creation, this flag indicates that the queue or exchange should be deleted when no clients are connected
      to the given queue or exchange.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.amqp-mandatory">
    <term>
     <constant>AMQP_MANDATORY</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      When publishing a message, the message must be routed to a valid queue. If it is not, an error will be returned.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.amqp-immediate">
    <term>
     <constant>AMQP_IMMEDIATE</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      When publishing a message, mark this message for immediate processing by the broker. (High priority message.)
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.amqp-multiple">
    <term>
     <constant>AMQP_MULTIPLE</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      If set during a call to <methodname>AMQPQueue::ack</methodname>, the delivery tag is treated as "up to and including", so that multiple messages can be acknowledged with a single method. If set to zero, the delivery tag refers to a single message. If the <constant>AMQP_MULTIPLE</constant> flag is set, and the delivery tag is zero, this indicates acknowledgement of all outstanding messages. 
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.amqp-nowait">
    <term>
     <constant>AMQP_NOWAIT</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      If set during a call to <methodname>AMQPExchange::bind</methodname>, the server will not respond to the method. The client should not wait for a reply method. If the server could not complete the method it will raise a channel or connection exception. 
     </simpara>
    </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.amqp-ex-type-direct">
    <term>
     <constant>AMQP_EX_TYPE_DIRECT</constant>
     (<type>string</type>)
    </term>
    <listitem>
     <simpara>
      A direct exchange type.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.amqp-ex-type-fanout">
    <term>
     <constant>AMQP_EX_TYPE_FANOUT</constant>
     (<type>string</type>)
    </term>
    <listitem>
     <simpara>
      A fanout exchange type.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.amqp-ex-type-topic">
    <term>
     <constant>AMQP_EX_TYPE_TOPIC</constant>
     (<type>string</type>)
    </term>
    <listitem>
     <simpara>
      A topic exchange type.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.amqp-ex-type-header">
    <term>
     <constant>AMQP_EX_TYPE_HEADER</constant>
     (<type>string</type>)
    </term>
    <listitem>
     <simpara>
      A header exchange type.
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
